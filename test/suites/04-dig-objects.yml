# Venom Test Suite definition
# Check Venom documentation for more information : https://github.com/ovh/venom
name: compute metrics on values stored in deep structures
testcases:
  - name: deep objects
    steps:
      - script: echo '{"person":{"age":24,"address":{"street":"Baroque Street"}}}' > working/real.jsonl
      - script: echo '{"person":{"age":43,"address":{"street":"Baroque Street"}}}' >> working/real.jsonl

      - script: echo '{"person":{"age":34,"address":{"street":"Classic Street"}}}' > working/masked.jsonl
      - script: echo '{"person":{"age":83,"address":{"street":"Expression Avenue"}}}' >> working/masked.jsonl

      - script: cat working/masked.jsonl | mimo -v3 working/real.jsonl
        assertions:
          - result.code ShouldEqual 0
          - result.systemerr ShouldContainSubstring person.age count-ignored=0 count-masked=2 count-missed=0 count-nil=0 field=person.age rate-coherence=1 rate-identifiable=1 rate-masking=1
          - result.systemerr ShouldContainSubstring person.address.street count-ignored=0 count-masked=2 count-missed=0 count-nil=0 field=person.address.street rate-coherence=0 rate-identifiable=1 rate-masking=1

      - script: mv report.html ../reports/report_deep_object.html

  - name: deep arrays
    steps:
      - script: echo '{"groups":["A","B",[1,2]]}' > working/real.jsonl
      - script: echo '{"groups":["C","D",[3,4]]}' >> working/real.jsonl

      - script: echo '{"groups":["A","E",[5,6]]}' > working/masked.jsonl
      - script: echo '{"groups":["F","D",[5,6]]}' >> working/masked.jsonl

      - script: cat working/masked.jsonl | mimo -v3 working/real.jsonl
        assertions:
          - result.code ShouldEqual 0
          - result.systemerr ShouldContainSubstring groups.[] count-ignored=0 count-masked=2 count-missed=2 count-nil=0 field=groups.[] rate-coherence=1 rate-identifiable=1 rate-masking=0.5
          - result.systemerr ShouldContainSubstring groups.[].[] count-ignored=0 count-masked=4 count-missed=0 count-nil=0 field=groups.[].[] rate-coherence=1 rate-identifiable=0 rate-masking=1

      - script: mv report.html ../reports/report_deep_array.html

  - name: deep objects and arrays
    steps:
      - script: echo '{"batchs":[{"id":1,"accounts":[{"number":"01234"},{"number":"56789"}]}]}' > working/real.jsonl
      - script: echo '{"batchs":[{"id":1,"accounts":[{"number":"56789"}]},{"id":2,"accounts":[{"number":"01234"}]}]}' >> working/real.jsonl

      - script: echo '{"batchs":[{"id":1,"accounts":[{"number":"A"},{"number":"B"}]}]}' > working/masked.jsonl
      - script: echo '{"batchs":[{"id":1,"accounts":[{"number":"B"}]},{"id":2,"accounts":[{"number":"A"}]}]}' >> working/masked.jsonl

      - script: cat working/masked.jsonl | mimo -v3 working/real.jsonl
        assertions:
          - result.code ShouldEqual 0
          - result.systemerr ShouldContainSubstring batchs.[].id count-ignored=0 count-masked=0 count-missed=3 count-nil=0 field=batchs.[].id rate-coherence=1 rate-identifiable=1 rate-masking=0
          - result.systemerr ShouldContainSubstring batchs.[].accounts.[].number count-ignored=0 count-masked=4 count-missed=0 count-nil=0 field=batchs.[].accounts.[].number rate-coherence=1 rate-identifiable=1 rate-masking=1

      - script: mv report.html ../reports/report_deep_mixed.html
